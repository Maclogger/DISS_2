@page "/TopFurniturePage"
@using DISS_2.BackEnd
@using DISS_2.BackEnd.Core
@using DISS_2.BackEnd.TopFurniture
@using DISS_2.Components.Basic.Simulation
@rendermode InteractiveServer

@if (MainApp.Instance.TopFurnitureSimulation != null)
{
    <SimulationComp
        Headline="Top Furniture, LCC"
        UpdateUi="UpdateUi"
        Simulation="MainApp.Instance.TopFurnitureSimulation" InitializeSimulation="ResetSimulation">

        <div class="container-fluid">
            <div class="row">
                <div class="col-3 d-flex justify-content-between flex-column p-0 gap-2">
                    <div class="d-flex align-items-center">
                        <label class="card bg-primary text-white me-2 fs-4 text-center" style="width: 8rem;">A</label>
                        <input @bind="A" class="form-control flex-grow-1" type="number" min="1" step="1"
                               disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
                    </div>
                    <div class="d-flex align-items-center">
                        <label class="card bg-primary text-white me-2 fs-4 text-center" style="width: 8rem;">B</label>
                        <input @bind="B" class="form-control flex-grow-1" type="number" min="1" step="1"
                               disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
                    </div>
                    <div class="d-flex align-items-center">
                        <label class="card bg-primary text-white me-2 fs-4 text-center" style="width: 8rem;">C</label>
                        <input @bind="C" class="form-control flex-grow-1" type="number" min="1" step="1"
                               disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
                    </div>
                    <div class="d-flex align-items-center">
                        <label class="card bg-primary text-white me-2 fs-4 text-center" style="width: 8rem;">Days</label>
                        <input @bind="Days" class="form-control flex-grow-1" type="number" min="1" step="1"
                               disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
                    </div>
                </div>

                <div class="col-9 p-0">
                    <div class="card bg-dark d-flex flex-row gap-4 text-center align-items-center p-4  ms-4">
                        <div class="card bg-white flex-grow-1 d-flex justify-content-center align-items-center"
                             style="aspect-ratio: 1/1; width: 20%;">
                            <div>
                                <p class="m-0 mb-2 " style="font-size: 1vw;">Chairs</p>
                                <h3>@_chairsInSystem</h3>
                            </div>
                        </div>
                        <div class="card flex-grow-1 d-flex justify-content-center align-items-center"
                             style="aspect-ratio: 1/1; width: 20%;">
                            <div>
                                <p class="m-0 mb-2 " style="font-size: 1vw;">Tables</p>
                                <h3>@_tablesInSystem</h3>
                            </div>
                        </div>
                        <div class="card flex-grow-1 d-flex justify-content-center align-items-center"
                             style="aspect-ratio: 1/1; width: 20%;">
                            <div>
                                <p class="m-0 mb-2 " style="font-size: 1vw;">Wardrobes</p>
                                <h3>@_wardrobesInSystem</h3>
                            </div>
                        </div>
                        <div class="card bg-white flex-grow-1 d-flex justify-content-center align-items-center"
                             style="aspect-ratio: 1/1; width: 20%;">
                            <div>
                                <p class="m-0 mb-2 " style="font-size: 1vw;">Sum</p>
                                <h3>@(_chairsInSystem + _tablesInSystem + _wardrobesInSystem)</h3>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="card rounded-3  p-4 bg-light mt-4">
            <QueuesComp Queue4CountsByTypes="_queue4CountsByTypes" Queue3CountsByTypes="_queue3CountsByTypes"
                        Queue2CountsByTypes="_queue2CountsByTypes" Queue1CountsByTypes="_queue1CountsByTypes"/>
        </div>

        <div class="container-fluid mt-4">
            <div class="row">
                <div class="col-6 p-0">
                    <WorkersComp Workers="_workers"/>
                </div>
                <div class="col-6 p-0 ps-4 d-flex flex-grow-1 flex-column">
                    <LocationsComp Locations="_locations"/>
                </div>
            </div>
        </div>
    </SimulationComp>
}

@code {
    public int A { get; set; } = 2;
    public int B { get; set; } = 2;
    public int C { get; set; } = 18;
    public int Days { get; set; } = 249;


    private int _chairsInSystem = 0;
    private int _tablesInSystem = 0;
    private int _wardrobesInSystem = 0;

    private int _completedOrders = 0;
    private List<Worker> _workers = new();
    private List<Location> _locations = new();

    private Dictionary<string, int> _queue1CountsByTypes = new();
    private Dictionary<string, int> _queue2CountsByTypes = new();
    private Dictionary<string, int> _queue4CountsByTypes = new();
    private Dictionary<string, int> _queue3CountsByTypes = new();

    protected override void OnInitialized()
    {
        if (MainApp.Instance.TopFurnitureSimulation == null)
        {
            MainApp.Instance.TopFurnitureSimulation = new TopFurnitureSimulation();
            ResetSimulation();
        }
    }

    private void UpdateUi(SimCore simCore)
    {
        TopFurnitureSimulation sim = (TopFurnitureSimulation)simCore;

        _queue1CountsByTypes = new(sim.Queues[1].TypeCounts);
        _queue2CountsByTypes = new(sim.Queues[2].TypeCounts);
        _queue3CountsByTypes = new(sim.Queues[3].TypeCounts);
        _queue4CountsByTypes = new(sim.Queues[4].TypeCounts);

        _chairsInSystem = sim.ChairsInSystem;
        _tablesInSystem = sim.TablesInSystem;
        _wardrobesInSystem = sim.WardrobesInSystem;

        _workers = new(sim.GetAllWorkers());
        _locations = new(sim.Locations);

        _completedOrders = sim.CompletedOrders;

        InvokeAsync(StateHasChanged);
    }

    private void ResetSimulation()
    {
        MainApp.Instance.TopFurnitureSimulation!.Reinitialize(A, B, C, Days);
        UpdateUi(MainApp.Instance.TopFurnitureSimulation);
    }

}