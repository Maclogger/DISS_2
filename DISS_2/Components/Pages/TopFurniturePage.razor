@page "/TopFurniturePage"
@using DISS_2.BackEnd
@using DISS_2.BackEnd.Core
@using DISS_2.BackEnd.TopFurniture
@using DISS_2.Components.Basic.Simulation
@rendermode InteractiveServer

@if (MainApp.Instance.TopFurnitureSimulation != null)
{
    <SimulationComp
        Headline="Top Furniture, LCC"
        UpdateUi="UpdateUi"
        Simulation="MainApp.Instance.TopFurnitureSimulation" InitializeSimulation="ResetSimulation">

        <div class="d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center">
                <label class="card bg-primary text-white me-2 fs-4 text-center" style="width: 2.5rem;">A</label>
                <input @bind="A" class="form-control flex-grow-1" type="number" min="1" step="1"
                       disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
            </div>
            <div class="d-flex align-items-center">
                <label class="card bg-primary text-white mx-2 fs-4 text-center" style="width: 2.5rem;">B</label>
                <input @bind="B" class="form-control flex-grow-1" type="number" min="1" step="1"
                       disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
            </div>
            <div class="d-flex align-items-center">
                <label class="card bg-primary text-white mx-2 fs-4 text-center" style="width: 2.5rem;">C</label>
                <input @bind="C" class="form-control flex-grow-1" type="number" min="1" step="1"
                       disabled="@MainApp.Instance.TopFurnitureSimulation.IsRunning"/>
            </div>
        </div>

        <div class="card rounded-3 m-2 bg-dark text-white">
            <p class="fs-4">Queue 1: @Queue1Count</p>
            <p class="fs-4">Queue 2: @Queue2Count</p>
            <p class="fs-4">Queue 3: @Queue3Count</p>
            <p class="fs-4">Queue 4: @Queue4Count</p>
        </div>

    </SimulationComp>
}

@code {
    public int A { get; set; } = 1;
    public int B { get; set; } = 1;
    public int C { get; set; } = 1;

    private int Queue1Count { get; set; } = 0;
    private int Queue2Count { get; set; } = 0;
    private int Queue3Count { get; set; } = 0;
    private int Queue4Count { get; set; } = 0;


    protected override void OnInitialized()
    {
        if (MainApp.Instance.TopFurnitureSimulation == null)
        {
            MainApp.Instance.TopFurnitureSimulation = new TopFurnitureSimulation();
            ResetSimulation();
        }
    }

    private void UpdateUi(SimCore simCore)
    {
        TopFurnitureSimulation sim = (TopFurnitureSimulation)simCore;

        Queue1Count = sim.Queues[1].GetCount();
        Queue2Count = sim.Queues[2].GetCount();
        Queue3Count = sim.Queues[3].GetCount();
        Queue4Count = sim.Queues[4].GetCount();

        InvokeAsync(StateHasChanged);
    }

    private void ResetSimulation()
    {
        MainApp.Instance.TopFurnitureSimulation!.Reinitialize(A, B, C);
        UpdateUi(MainApp.Instance.TopFurnitureSimulation);
    }

}