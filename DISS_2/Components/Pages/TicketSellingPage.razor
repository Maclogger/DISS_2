@page "/TicketSelling"
@rendermode InteractiveServer
@using DISS_2.BackEnd
@using DISS_2.BackEnd.Core
@using DISS_2.BackEnd.TicketSelling
@using DISS_2.Components.Basic.Simulation

@if (MainApp.Instance.TicketSimulation != null)
{
    <SimulationComp
        Headline="Ticket Selling"
        UpdateUi="UpdateUi"
        Simulation="MainApp.Instance.TicketSimulation" InitializeSimulation="ResetSimulation">
        <h4 class="m-0">People waiting in queue: @_peopleInQueue</h4>
        <h4 class="m-0">Window busy: @_windowIsBusy</h4>
    </SimulationComp>
}

@code {
    private bool _windowIsBusy = false;
    private int _peopleInQueue = 0;

    protected override async Task OnInitializedAsync()
    {
        if (MainApp.Instance.TicketSimulation == null)
        {
            MainApp.Instance.TicketSimulation = new();
            await ResetSimulation();
        }
    }

    public async Task UpdateUi(SimCore simCore)
    {
        TicketSimulation sim = (TicketSimulation)simCore;
        _windowIsBusy = sim.IsBusy;
        _peopleInQueue = sim.CustomerQueue.Count;
        await InvokeAsync(StateHasChanged);
    }

    private async Task ResetSimulation()
    {
        MainApp.Instance.TicketSimulation!.ResetSimulation();
        await UpdateUi(MainApp.Instance.TicketSimulation);
    }

}