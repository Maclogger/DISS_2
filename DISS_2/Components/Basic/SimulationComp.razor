@using DISS_2.BackEnd
@using DISS_2.BackEnd.Core
@rendermode InteractiveServer
@implements IDelegate;

<div class="card rounded-3 bg-dark text-white p-4">
    <h1>@Headline</h1>
    <div class="d-flex">
        <div class="card rounded-3 bg-white p-2 d-flex align-items-center justify-content-center p-3" style="width: 17rem">
            <h4 class="text-center m-0">@_simTime</h4>
        </div>
        <button class="btn btn-primary ms-4" @onclick="RunSimulation!">Start Simulation</button>
    </div>
    <div class="card rounded-3 bg-white p-2 mt-4" style="width: 50rem;">
        <SpeedControlComp/>
    </div>
    <div class="card rounded-3 bg-white p-2 mt-4">
        @ChildContent
    </div>
    <div class="card rounded-3 bg-white p-2 mt-4">
        <h4>Event Calendar</h4>
        <textarea class="form-control">
            @_eventCalendarString
        </textarea>
    </div>
</div>

@code {
    [Parameter, EditorRequired] public RenderFragment? ChildContent { get; set; }

    [Parameter, EditorRequired] public string Headline { get; set; } = "Moja Simulul√°cia";

    [Parameter, EditorRequired] public Func<Task>? RunSimulation { get; set; }

    [Parameter, EditorRequired] public Action<SimState>? UpdateUi { get; set; }

    private string _simTime = "";
    private string _eventCalendarString = "";

    protected override void OnInitialized()
    {
        MainApp.Instance.Delegates.Add(this);
    }

    void IDelegate.UpdateUi(SimState simState)
    {
        _simTime = TimeHandler.ToReadableTime(simState.CurrentSimTime);
        _eventCalendarString = simState.Calendar.ToString();
        UpdateUi?.Invoke(simState);
        InvokeAsync(StateHasChanged);
    }

}